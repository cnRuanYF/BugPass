<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 
  添加版本
  public boolean add(Version obj) throws Exception {
		return DBUtil.execUpdate("insert into version values(null,?,?)", obj.getProjectId(), obj.getVersionName()) > 0;
	}
根据版本ID删除
public boolean deleteByVersionId(int versionId) throws Exception {
		// TODO Auto-generated method stub
		return DBUtil.execUpdate("delete from version where versionId=?", versionId) > 0;
	}
根据版本ID修改
public boolean update(Version version) throws Exception {
		return DBUtil.execUpdate("update version set versionName=? where versionId=?", version.getVersionName(),version.getVersionId())>0;
	}
根据项目ID查找所有版本
public List<Version> findAllByProjectid(int projectId) throws Exception {
		// TODO Auto-generated method stub
		return (List<Version>) DBUtil.execQuery("select * from version where projectId=?", Version.class, projectId);
	}
根据版本ID查找版本
public Version findById(long id) throws Exception {
		
		List<Version> list= (List<Version>) DBUtil.execQuery("select * from version where versionId=?", Version.class, id);
		if (list.size()>0) {
			return list.get(0);
		}else {
			return null;
		}
	}
根据版本名模糊查询
public List<Version> findByLikename(String vaersionName) {
		// TODO Auto-generated method stub
		return (List<Version>) DBUtil.execQuery("select * from version where versionName like ?", Version.class,
				"%"+vaersionName+"%");
	}
根据版本名查询
public List<Version> findByVersionname(String vaersionName) {
		// TODO Auto-generated method stub
		return (List<Version>) DBUtil.execQuery("select * from version where versionName=?", Version.class,
				vaersionName);
	}
   -->
<mapper namespace="com.bugpass.dao.VersionDAO">

	<!-- resulMap 关联数据库和实体类字段 -->
	<resultMap type="com.bugpass.entity.Version" id="versionResulmap">
	<id property="versionId" column="version_id"/>
	<result property="versionName" column="version_name"/>
	<result property="projectId" column="project_id"/>
	</resultMap>

	<!-- 根据项目ID查询  -->
	<select id="findAllByProjectid" resultType="com.bugpass.entity.Version" resultMap="versionResulmap">
		select * from version where project_id=#{projectId}
	</select>
	
	<!-- 根据版本ID查询 -->
	<select id="queryById" resultType="com.bugpass.entity.Version" resultMap="versionResulmap">
	select * from version where version_id=#{versionId}
	</select>
	
	<!-- 查询版本名是否存在 -->
	<select id="findVersionNameByProjectId" resultType="com.bugpass.entity.Version" resultMap="versionResulmap">
	select * from version where version_name=#{arg0} and project_id=#{arg1}
	</select>
	
	<!-- 根据版本名模糊查询 -->
	<select id="findByLikename" resultType="com.bugpass.entity.Version" resultMap="versionResulmap">
	select * from version where version_name like concat('%',#{arg0},'%') and  project_id=#{arg1}
	</select>
	
	<!-- 根据版本ID修改 -->
	<update id="update" >
	update version set version_name=#{versionName} where version_id=#{versionId}
	</update>
	
	<!-- 根据版本ID删除 -->
	<delete id="deleteByVersionId">
	delete from version where version_id=#{versionId}
	</delete>
	
	<!-- 添加版本 useGeneratedKeys="true" keyProperty="version_id" -->
	<insert id="add" >
	insert into version values(null,#{versionName},#{projectId})
	</insert>
	
</mapper>