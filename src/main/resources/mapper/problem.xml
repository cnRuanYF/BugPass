<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bugpass.dao.ProblemDao">

    <!--RuanYaofeng Part-->
    <select id="queryById" resultMap="problemMap">
        SELECT *
        FROM problem
        WHERE problem_id = #{id}
    </select>

    <!-- ++++++++++++++++++++++++++++++++ -->

    <!--XHH Original Part-->

    <select id="getProblemCount" resultType="Integer">
        select count(*)
        from problem
        where publisher = #{publisher}
    </select>

    <select id="getStatusCount" resultType="Integer" parameterType="java.util.Map">
        select count(*)
        from problem, problem_status
        where problem.problem_status = problem_status.problemstatus_id and problemstatus_name = #{problemStatusName} and
              problem.publisher = #{publisher}
    </select>

    <select id="getAllType" resultMap="problemTypeMap">
        select *
        from problem_type
    </select>

    <select id="getProblemAll" resultMap="problemAllMap">
        select *
        from problem, problem_level, problem_status, problem_type
        where problem.problem_level = problem_level.problemlevel_id and
              problem_status.problemstatus_id = problem.problem_status and
              problem.problem_type = problem_type.problemtype_id and problem.publisher = #{publisher}
    </select>

    <select id="getProblemByStatus" resultMap="problemAllMap" parameterType="java.util.Map">
        select *
        from problem, problem_level, problem_status, problem_type
        where problem.problem_level = problem_level.problemlevel_id and
              problem_status.problemstatus_id = problem.problem_status and
              problem.problem_type = problem_type.problemtype_id and
              problem_status.problemstatus_name = #{problemStatusName} and problem.publisher = #{publisher}
    </select>

    <select id="getAllLevel" resultMap="problemLevelMap">
        select *
        from problem_level
    </select>

    <select id="getAllStatus" resultMap="problemStatusMap">
        select *
        from problem_status
    </select>

    <select id="getAllProblem" resultMap="problemMap">
        select *
        from problem
    </select>


    <select id="getAllTypeById" resultMap="problemAllMap" parameterType="java.util.Map">
        select *
        from problem, problem_type, user
        where user.user_id = problem.publisher and problem.problem_type = problem_type.problemtype_id and
              problem_type.problemtype_id = #{problemTypeId} and problem.publisher = #{publisher}
    </select>

    <select id="getAllLevelById" resultMap="problemAllMap" parameterType="java.util.Map">
        select *
        from problem, problem_level, user
        where user.user_id = problem.publisher and problem.problem_level = problem_level.problemlevel_id and
              problem_level.problemlevel_id = #{problemLevelId} and problem.publisher = #{publisher}
    </select>

    <select id="getAllStatusById" resultMap="problemAllMap" parameterType="java.util.Map">
        select *
        from problem, problem_status, user
        where user.user_id = problem.publisher and problem.problem_status = problem_status.problemstatus_id and
              problem_status.problemstatus_id = #{problemStatusId} and problem.publisher = #{publisher}
    </select>

    <select id="getCountByUid" resultType="Integer" parameterType="java.util.Map">
        select count(*)
        from user, problem, problem_status
        where user.user_id = problem.publisher and problem.problem_status = problem_status.problemstatus_id and
              problem.publisher = #{publisher} and problemstatus_name = #{problemStatusName}
    </select>


    <select id="getProblemByUid" resultMap="problemAllMap" parameterType="java.util.Map">
        select *
        from user, problem, problem_level, problem_status, problem_type
        where user.user_id = problem.publisher and problem.problem_level = problem_level.problemlevel_id and
              problem_status.problemstatus_id = problem.problem_status and
              problem.problem_type = problem_type.problemtype_id and problem.publisher = #{publisher} and
              problemstatus_name = #{problemStatusName}
    </select>


    <insert id="addProblem" parameterType="java.util.Map">
        insert into problem (problem_id, problem_title, problem_desc, problem_type, problem_level, problem_status, publisher,project_id)
        values (null, #{problemTitle}, #{problemDesc}, #{problemType}, #{problemLevel}, #{problemStatus}, #{publisher},#{projectId})
    </insert>

    <delete id="deleteProblemById">
        delete from problem
        where problem_id = #{problemId}
    </delete>

    <resultMap type="com.bugpass.entity.ProblemType" id="problemTypeMap">
        <!-- 主键 其他列属性 -->
        <id property="problemTypeId" column="problemtype_id"/>
        <result property="problemTypeName" column="problemtype_name"/>
    </resultMap>

    <resultMap type="com.bugpass.entity.ProblemLevel" id="problemLevelMap">
        <!-- 主键 其他列属性 -->
        <id property="problemLevelId" column="problemlevel_id"/>
        <result property="problemLevelName" column="problemlevel_name"/>
    </resultMap>

    <resultMap type="com.bugpass.entity.ProblemStatus" id="problemStatusMap">
        <!-- 主键 其他列属性 -->
        <id property="problemStatusId" column="problemstatus_id"/>
        <result property="problemStatusName" column="problemstatus_name"/>
    </resultMap>

    <resultMap type="com.bugpass.entity.ProblemAll" id="problemAllMap">
        <!-- 主键 其他列属性 -->
        <id property="problemId" column="problem_id"/>
        <result property="problemTitle" column="problem_title"/>
        <result property="problemDesc" column="problem_desc"/>
        <result property="problemLevelName" column="problemlevel_name"/>
        <result property="problemStatusName" column="problemstatus_name"/>
        <result property="problemTypeName" column="problemtype_name"/>
    </resultMap>

    <!-- ====================================================================== -->

    <insert id="add">
        insert into
            problem (problem_id,problem_title, problem_desc, problem_type, problem_level, problem_status, publisher, project_id)
        values
            (null,#{problemTitle}, #{problemDesc}, #{problemType}, #{problemLevel}, #{problemStatus}, #{publisher}, #{projectId})
    </insert>

    <update id="update">
        update
            problem
        set
            <if test="problemTitle!=null">problem_title = #{problemTitle},</if>
            <if test="problemType!=null">problem_type = #{problemType},</if>
            <if test="problemDesc!=null">problem_desc = #{problemDesc},</if>
            <if test="problemLevel!=null">problem_level = #{problemLevel},</if>
            <if test="problemStatus!=null">problem_status = #{problemStatus},</if>
            <if test="assignedTo!=null">assigned_to = #{assignedTo},</if>
            <if test="moduleId!=null">module_id = #{moduleId},</if>
            <if test="versionId!=null">version_id = #{versionId}</if>
        where
            problem_id = #{id}
    </update>

    <select id="queryProjectByProjectId" resultMap="problemMap">
        select
            *
        from
            problem
        where
            project_id = #{projectId}

    </select>

    <resultMap type="com.bugpass.entity.Problem" id="problemMap">
        <!-- 主键 其他列属性 -->
        <id property="id" column="problem_id"/>
        <result property="problemTitle" column="problem_title"/>
        <result property="problemDesc" column="problem_desc"/>
        <result property="problemType" column="problem_type"/>
        <result property="problemLevel" column="problem_level"/>
        <result property="problemStatus" column="problem_status"/>
        <result property="publisher" column="publisher"/>
        <result property="assignedTo" column="assigned_to"/>
        <result property="projectId" column="project_id"/>
        <result property="moduleId" column="module_id"/>
        <result property="versionId" column="version_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
</mapper>
